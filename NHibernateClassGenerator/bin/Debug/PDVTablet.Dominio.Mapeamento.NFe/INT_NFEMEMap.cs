using FluentNHibernate.Mapping;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using PDVTablet.Dominio.Entidades.NFe;

namespace PDVTablet.Dominio.Mapeamento.NFe
{
    public class INT_NFEMEMap : ClassMap<INT_NFEME>
    {
        public INT_NFEMEMap()
        {
            Table("INT_NFEME");
            Map(x => x.ICMSTOT_VOUTRO, "ICMSTOT_VOUTRO");
            Map(x => x.ICMSTOT_VNF, "ICMSTOT_VNF");
            Map(x => x.ISSQNTOT_VSERV, "ISSQNTOT_VSERV");
            Map(x => x.ISSQNTOT_VBC, "ISSQNTOT_VBC");
            Map(x => x.ISSQNTOT_VISS, "ISSQNTOT_VISS");
            Map(x => x.ISSQNTOT_VPIS, "ISSQNTOT_VPIS");
            Map(x => x.ISSQNTOT_VCOFINS, "ISSQNTOT_VCOFINS");
            Map(x => x.RETTRIB_VRETPIS, "RETTRIB_VRETPIS");
            Map(x => x.RETTRIB_VRETCOFINS, "RETTRIB_VRETCOFINS");
            Map(x => x.RETTRIB_VRETCSLL, "RETTRIB_VRETCSLL");
            Map(x => x.RETTRIB_VBCIRRF, "RETTRIB_VBCIRRF");
            Map(x => x.RETTRIB_VIRRF, "RETTRIB_VIRRF");
            Map(x => x.RETTRIB_VBCRETPREV, "RETTRIB_VBCRETPREV");
            Map(x => x.RETTRIB_VRETPREV, "RETTRIB_VRETPREV");
            Map(x => x.TRANSP_MODFRETE, "TRANSP_MODFRETE");
            Map(x => x.TRANSPORTA_CNPJ, "TRANSPORTA_CNPJ");
            Map(x => x.TRANSPORTA_CPF, "TRANSPORTA_CPF");
            Map(x => x.TRANSPORTA_XNOME, "TRANSPORTA_XNOME").Length();
            Map(x => x.TRANSPORTA_IE, "TRANSPORTA_IE").Length();
            Map(x => x.TRANSPORTA_XENDER, "TRANSPORTA_XENDER").Length();
            Map(x => x.TRANSPORTA_XMUN, "TRANSPORTA_XMUN").Length();
            Map(x => x.TRANSPORTA_UF, "TRANSPORTA_UF").Length();
            Map(x => x.RETTRANSP_VSERV, "RETTRANSP_VSERV");
            Map(x => x.RETTRANSP_VBCRET, "RETTRANSP_VBCRET");
            Map(x => x.RETTRANSP_PICMSRET, "RETTRANSP_PICMSRET");
            Map(x => x.RETTRANSP_VICMSRET, "RETTRANSP_VICMSRET");
            Map(x => x.RETTRANSP_CFOP, "RETTRANSP_CFOP");
            Map(x => x.RETTRANSP_CMUNFG, "RETTRANSP_CMUNFG");
            Map(x => x.VEICTRANSP_PLACA, "VEICTRANSP_PLACA").Length();
            Map(x => x.VEICTRANSP_UF, "VEICTRANSP_UF").Length();
            Map(x => x.VEICTRANSP_RNTC, "VEICTRANSP_RNTC").Length();
            Map(x => x.REBOQUE_PLACA1, "REBOQUE_PLACA1").Length();
            Map(x => x.REBOQUE_UF1, "REBOQUE_UF1").Length();
            Map(x => x.REBOQUE_RNTC1, "REBOQUE_RNTC1").Length();
            Map(x => x.REBOQUE_PLACA2, "REBOQUE_PLACA2").Length();
            Map(x => x.REBOQUE_UF2, "REBOQUE_UF2").Length();
            Map(x => x.REBOQUE_RNTC2, "REBOQUE_RNTC2").Length();
            Map(x => x.FAT_NFAT, "FAT_NFAT").Length();
            Map(x => x.FAT_VORIG, "FAT_VORIG");
            Map(x => x.FAT_VDESC, "FAT_VDESC");
            Map(x => x.FAT_VLIQ, "FAT_VLIQ");
            Map(x => x.EXPORTA_UFEMBARQ, "EXPORTA_UFEMBARQ").Length();
            Map(x => x.EXPORTA_XLOCEMBARQ, "EXPORTA_XLOCEMBARQ").Length();
            Map(x => x.COMPRA_XNEMP, "COMPRA_XNEMP").Length();
            Map(x => x.COMPRA_XPED, "COMPRA_XPED").Length();
            Map(x => x.COMPRA_XCONT, "COMPRA_XCONT").Length();
            Map(x => x.OPERADOR, "OPERADOR").Length();
            Map(x => x.DATA_ALTER, "DATA_ALTER");
            Map(x => x.HORA_ALTER, "HORA_ALTER");
            Map(x => x.TIME_STAMP, "TIME_STAMP");
            Map(x => x.SYNCHCODE, "SYNCHCODE");
            Map(x => x.IDE_HSAIENT, "IDE_HSAIENT").Length();
            Map(x => x.IDE_DHCONT, "IDE_DHCONT").Length();
            Map(x => x.IDE_XJUST, "IDE_XJUST").Length();
            Map(x => x.ENDEREMIT_CTELPAIS, "ENDEREMIT_CTELPAIS");
            Map(x => x.EMIT_CRT, "EMIT_CRT");
            Map(x => x.AVULSA_CNPJ, "AVULSA_CNPJ");
            Map(x => x.AVULSA_XORGAO, "AVULSA_XORGAO").Length();
            Map(x => x.AVULSA_MATR, "AVULSA_MATR").Length();
            Map(x => x.AVULSA_XAGENTE, "AVULSA_XAGENTE").Length();
            Map(x => x.AVULSA_FONE, "AVULSA_FONE");
            Map(x => x.AVULSA_UF, "AVULSA_UF").Length();
            Map(x => x.AVULSA_NDAR, "AVULSA_NDAR").Length();
            Map(x => x.AVULSA_DEMI, "AVULSA_DEMI");
            Map(x => x.AVULSA_VDAR, "AVULSA_VDAR");
            Map(x => x.AVULSA_REPEMI, "AVULSA_REPEMI").Length();
            Map(x => x.AVULSA_DPAG, "AVULSA_DPAG");
            Map(x => x.ENDERDEST_CTELPAIS, "ENDERDEST_CTELPAIS");
            Map(x => x.RETIRADA_CPF, "RETIRADA_CPF");
            Map(x => x.ENTREGA_CPF, "ENTREGA_CPF");
            Map(x => x.CANA_SAFRA, "CANA_SAFRA").Length();
            Map(x => x.CANA_REF, "CANA_REF").Length();
            Map(x => x.DESTINACAO, "DESTINACAO");
            Map(x => x.COND_ESPECIAL, "COND_ESPECIAL");
            Map(x => x.ICMSTOT_VTOTTRIB, "ICMSTOT_VTOTTRIB");
            Map(x => x.ICMSTOT_DESON, "ICMSTOT_DESON");
            Map(x => x.FINNFE, "FINNFE");
            Map(x => x.INDFINAL, "INDFINAL");
            Map(x => x.INDPRES, "INDPRES");
            Map(x => x.IDESTRANGEIRO, "IDESTRANGEIRO").Length();
            Map(x => x.INDIEDEST, "INDIEDEST");
            Map(x => x.AUT_CNPJ, "AUT_CNPJ");
            Map(x => x.AUT_CPF, "AUT_CPF");
            Map(x => x.HRCRIACAO, "HRCRIACAO").Length();
            Map(x => x.CD_CAIXA, "CD_CAIXA").Length();
            Map(x => x.EMPRESA, "EMPRESA");
            Map(x => x.FILIAL, "FILIAL");
            Map(x => x.INFNFE_ID, "INFNFE_ID").Length();
            Map(x => x.SEQ_NF, "SEQ_NF");
            Map(x => x.IDE_CUF, "IDE_CUF");
            Map(x => x.IDE_CNF, "IDE_CNF");
            Map(x => x.IDE_NATOP, "IDE_NATOP").Length();
            Map(x => x.IDE_INDPA, "IDE_INDPA");
            Map(x => x.IDE_MOD, "IDE_MOD").Length();
            Map(x => x.IDE_SERIE, "IDE_SERIE");
            Map(x => x.IDE_NNF, "IDE_NNF");
            Map(x => x.IDE_DEMI, "IDE_DEMI");
            Map(x => x.IDE_DSAIENT, "IDE_DSAIENT");
            Map(x => x.IDE_TPNF, "IDE_TPNF");
            Map(x => x.IDE_CMUNFG, "IDE_CMUNFG");
            Map(x => x.IDE_TPIMP, "IDE_TPIMP");
            Map(x => x.IDE_TPEMIS, "IDE_TPEMIS");
            Map(x => x.IDE_CDV, "IDE_CDV");
            Map(x => x.IDE_TPAMB, "IDE_TPAMB");
            Map(x => x.IDE_FINNFE, "IDE_FINNFE");
            Map(x => x.IDE_PROCEMI, "IDE_PROCEMI");
            Map(x => x.IDE_VERPROC, "IDE_VERPROC").Length();
            Map(x => x.EMIT_CNPJ, "EMIT_CNPJ");
            Map(x => x.EMIT_CPF, "EMIT_CPF");
            Map(x => x.EMIT_XNOME, "EMIT_XNOME").Length();
            Map(x => x.EMIT_XFANT, "EMIT_XFANT").Length();
            Map(x => x.ENDEREMIT_XLGR, "ENDEREMIT_XLGR").Length();
            Map(x => x.ENDEREMIT_NRO, "ENDEREMIT_NRO").Length();
            Map(x => x.ENDEREMIT_XCPL, "ENDEREMIT_XCPL").Length();
            Map(x => x.ENDEREMIT_XBAIRRO, "ENDEREMIT_XBAIRRO").Length();
            Map(x => x.ENDEREMIT_CMUN, "ENDEREMIT_CMUN");
            Map(x => x.ENDEREMIT_XMUN, "ENDEREMIT_XMUN").Length();
            Map(x => x.ENDEREMIT_UF, "ENDEREMIT_UF").Length();
            Map(x => x.ENDEREMIT_CEP, "ENDEREMIT_CEP");
            Map(x => x.ENDEREMIT_CPAIS, "ENDEREMIT_CPAIS");
            Map(x => x.ENDEREMIT_XPAIS, "ENDEREMIT_XPAIS").Length();
            Map(x => x.ENDEREMIT_DDD, "ENDEREMIT_DDD");
            Map(x => x.ENDEREMIT_FONE, "ENDEREMIT_FONE");
            Map(x => x.EMIT_IE, "EMIT_IE").Length();
            Map(x => x.EMIT_IEST, "EMIT_IEST").Length();
            Map(x => x.EMIT_IM, "EMIT_IM").Length();
            Map(x => x.EMIT_CNAE, "EMIT_CNAE").Length();
            Map(x => x.DEST_CNPJ, "DEST_CNPJ");
            Map(x => x.DEST_CPF, "DEST_CPF");
            Map(x => x.DEST_XNOME, "DEST_XNOME").Length();
            Map(x => x.DEST_EMAIL, "DEST_EMAIL").Length();
            Map(x => x.ENDERDEST_XLGR, "ENDERDEST_XLGR").Length();
            Map(x => x.ENDERDEST_NRO, "ENDERDEST_NRO").Length();
            Map(x => x.ENDERDEST_XCPL, "ENDERDEST_XCPL").Length();
            Map(x => x.ENDERDEST_XBAIRRO, "ENDERDEST_XBAIRRO").Length();
            Map(x => x.ENDERDEST_CMUN, "ENDERDEST_CMUN");
            Map(x => x.ENDERDEST_XMUN, "ENDERDEST_XMUN").Length();
            Map(x => x.ENDERDEST_UF, "ENDERDEST_UF").Length();
            Map(x => x.ENDERDEST_CEP, "ENDERDEST_CEP");
            Map(x => x.ENDERDEST_CPAIS, "ENDERDEST_CPAIS");
            Map(x => x.ENDERDEST_XPAIS, "ENDERDEST_XPAIS").Length();
            Map(x => x.ENDERDEST_DDD, "ENDERDEST_DDD");
            Map(x => x.ENDERDEST_FONE, "ENDERDEST_FONE");
            Map(x => x.DEST_IE, "DEST_IE").Length();
            Map(x => x.DEST_ISUF, "DEST_ISUF").Length();
            Map(x => x.RETIRADA_CNPJ, "RETIRADA_CNPJ");
            Map(x => x.RETIRADA_XLGR, "RETIRADA_XLGR").Length();
            Map(x => x.RETIRADA_NRO, "RETIRADA_NRO").Length();
            Map(x => x.RETIRADA_XCPL, "RETIRADA_XCPL").Length();
            Map(x => x.RETIRADA_XBAIRRO, "RETIRADA_XBAIRRO").Length();
            Map(x => x.RETIRADA_CMUN, "RETIRADA_CMUN");
            Map(x => x.RETIRADA_XMUN, "RETIRADA_XMUN").Length();
            Map(x => x.RETIRADA_UF, "RETIRADA_UF").Length();
            Map(x => x.ENTREGA_CNPJ, "ENTREGA_CNPJ");
            Map(x => x.ENTREGA_XLGR, "ENTREGA_XLGR").Length();
            Map(x => x.ENTREGA_NRO, "ENTREGA_NRO").Length();
            Map(x => x.ENTREGA_XCPL, "ENTREGA_XCPL").Length();
            Map(x => x.ENTREGA_XBAIRRO, "ENTREGA_XBAIRRO").Length();
            Map(x => x.ENTREGA_CMUM, "ENTREGA_CMUM");
            Map(x => x.ENTREGA_XMUN, "ENTREGA_XMUN").Length();
            Map(x => x.ENTREGA_UF, "ENTREGA_UF").Length();
            Map(x => x.ICMSTOT_VBC, "ICMSTOT_VBC");
            Map(x => x.ICMSTOT_VICMS, "ICMSTOT_VICMS");
            Map(x => x.ICMSTOT_VBCST, "ICMSTOT_VBCST");
            Map(x => x.ICMSTOT_VST, "ICMSTOT_VST");
            Map(x => x.ICMSTOT_VPROD, "ICMSTOT_VPROD");
            Map(x => x.ICMSTOT_VFRETE, "ICMSTOT_VFRETE");
            Map(x => x.ICMSTOT_VSEG, "ICMSTOT_VSEG");
            Map(x => x.ICMSTOT_VDESC, "ICMSTOT_VDESC");
            Map(x => x.ICMSTOT_VII, "ICMSTOT_VII");
            Map(x => x.ICMSTOT_VIPI, "ICMSTOT_VIPI");
            Map(x => x.ICMSTOT_VPIS, "ICMSTOT_VPIS");
            Map(x => x.ICMSTOT_VCOFINS, "ICMSTOT_VCOFINS");
        }
    }
}
